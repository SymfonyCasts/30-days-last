diff --git a/src/Controller/VoyageController.php b/src/Controller/VoyageController.php
index 7d0dd41..12d2407 100644
--- a/src/Controller/VoyageController.php
+++ b/src/Controller/VoyageController.php
@@ -7,6 +7,7 @@ use App\Form\VoyageType;
 use App\Repository\VoyageRepository;
 use Doctrine\ORM\EntityManagerInterface;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+use Symfony\Component\Form\FormInterface;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\Routing\Annotation\Route;
@@ -20,9 +21,7 @@ class VoyageController extends AbstractController
     {
         return $this->render('voyage/index.html.twig', [
             'voyages' => $voyageRepository->findBy([], ['id' => 'DESC']),
-            'form' => $this->createForm(VoyageType::class, null, [
-                'action' => $this->generateUrl('app_voyage_new'),
-            ]),
+            'form' => $this->createVoyageForm(),
         ]);
     }
 
@@ -30,7 +29,7 @@ class VoyageController extends AbstractController
     public function new(Request $request, EntityManagerInterface $entityManager): Response
     {
         $voyage = new Voyage();
-        $form = $this->createForm(VoyageType::class, $voyage);
+        $form = $this->createVoyageForm($voyage);
         $form->handleRequest($request);
 
         if ($form->isSubmitted() && $form->isValid()) {
@@ -66,7 +65,7 @@ class VoyageController extends AbstractController
     #[Route('/{id}/edit', name: 'app_voyage_edit', methods: ['GET', 'POST'])]
     public function edit(Request $request, Voyage $voyage, EntityManagerInterface $entityManager): Response
     {
-        $form = $this->createForm(VoyageType::class, $voyage);
+        $form = $this->createVoyageForm($voyage);
         $form->handleRequest($request);
 
         if ($form->isSubmitted() && $form->isValid()) {
@@ -95,4 +94,11 @@ class VoyageController extends AbstractController
 
         return $this->redirectToRoute('app_voyage_index', [], Response::HTTP_SEE_OTHER);
     }
+
+    private function createVoyageForm(Voyage $voyage = null): FormInterface
+    {
+        return $this->createForm(VoyageType::class, $voyage, [
+            'action' => $voyage?->getId() ? $this->generateUrl('app_voyage_edit', ['id' => $voyage->getId()]) : $this->generateUrl('app_voyage_new'),
+        ]);
+    }
 }
