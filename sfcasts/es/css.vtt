WEBVTT

00:00:01.176 --> 00:00:02.166 align:middle
¿Ya es el 5º día?

00:00:02.356 --> 00:00:03.576 align:middle
¡Estamos volando!

00:00:04.096 --> 00:00:06.306 align:middle
Es hora de añadir algo de CSS a nuestro sitio.

00:00:06.686 --> 00:00:08.836 align:middle
¿Y cómo funciona eso dentro de AssetMapper?

00:00:09.536 --> 00:00:13.076 align:middle
Bueno, ya tenemos un archivo
assets/styles/app.css.

00:00:13.636 --> 00:00:20.016 align:middle
Y... nada nos impide entrar en base.html.twig,
y añadir una etiqueta de enlace:

00:00:20.826 --> 00:00:27.896 align:middle
link, rel="stylesheet", href luego
asset() y la ruta lógica: styles/app.css.

00:00:29.486 --> 00:00:32.706 align:middle
¡Estupendo! Cuando actualizamos...

00:00:33.036 --> 00:00:36.626 align:middle
y miramos la fuente de
la página, ¡ahí está!

00:00:36.866 --> 00:00:39.626 align:middle
Funciona de maravilla y es superaburrido.

00:00:39.766 --> 00:00:41.056 align:middle
El tipo de aburrimiento que me gusta.

00:00:41.556 --> 00:00:44.446 align:middle
Sin embargo, si eliminamos esta línea...

00:00:44.446 --> 00:00:46.466 align:middle
y vamos a actualizar la página.

00:00:48.016 --> 00:00:54.866 align:middle
Huh, seguimos teniendo este fondo de
blue: un fondo azul que viene de app.css:

00:00:55.516 --> 00:00:57.226 align:middle
Echa otro vistazo a la fuente de la página.

00:00:58.056 --> 00:01:00.906 align:middle
¿Todavía hay una etiqueta
link que apunta a ese archivo?

00:01:01.946 --> 00:01:06.236 align:middle
Volvamos a base.html.twig,
hmm, aquí no hay nada.

00:01:07.016 --> 00:01:07.966 align:middle
¿De dónde viene eso?

00:01:08.926 --> 00:01:12.826 align:middle
La respuesta -apuesto a que lo has
adivinado- es la función importmap():

00:01:13.336 --> 00:01:19.006 align:middle
Y es porque se está importando
desde app.js: Importar un archivo CSS

00:01:19.006 --> 00:01:22.776 align:middle
desde JavaScript es algo a lo que probablemente
te hayas acostumbrado con Webpack Encore.

00:01:23.056 --> 00:01:24.686 align:middle
Importas un archivo CSS...

00:01:24.986 --> 00:01:28.286 align:middle
y, en última instancia, se renderiza
en la página como una etiqueta link.

00:01:28.796 --> 00:01:34.356 align:middle
Sin embargo, esto no es algo que admitan
realmente los módulos ECMAScript.

00:01:34.356 --> 00:01:38.396 align:middle
Lo único que puedes importar
son archivos JavaScript.

00:01:38.836 --> 00:01:44.006 align:middle
Así que esto debería fallar estrepitosamente:
como que debería descargar el archivo CSS

00:01:44.006 --> 00:01:46.236 align:middle
e intentar parsearlo como JavaScript.

00:01:46.736 --> 00:01:50.616 align:middle
Sin embargo, como habrás notado, ¡no falla!

00:01:50.946 --> 00:01:52.366 align:middle
¡Me encantan los misterios!

00:01:52.956 --> 00:01:56.516 align:middle
Se trata de una función totalmente
adicional que hemos añadido a AssetMapper.

00:01:56.826 --> 00:01:57.786 align:middle
Funciona así

00:01:58.246 --> 00:02:02.286 align:middle
En base.html.twig, decimos importmap('app').

00:02:02.886 --> 00:02:08.466 align:middle
El app se conoce como el punto de entrada: el único
archivo que el navegador ejecutará directamente.

00:02:08.826 --> 00:02:12.276 align:middle
Y sabemos que se refiere a assets/app.js.

00:02:12.626 --> 00:02:16.216 align:middle
Así que lo que hace AssetMapper
es entrar en este archivo

00:02:16.296 --> 00:02:20.426 align:middle
y encontrar todas las declaraciones
import para archivos JavaScript y CSS.

00:02:20.486 --> 00:02:25.636 align:middle
Por cada importación CSS que
encuentra, la añade como etiqueta link.

00:02:26.166 --> 00:02:28.246 align:middle
Es... básicamente así de sencillo.

00:02:28.756 --> 00:02:33.166 align:middle
Bueno, hay una pequeña y
fascinante complicación.

00:02:34.186 --> 00:02:37.186 align:middle
Ve a la pestaña red de
tu navegador y busca app.

00:02:39.146 --> 00:02:43.236 align:middle
Este es el archivo app.js que
está ejecutando el navegador.

00:02:43.616 --> 00:02:48.246 align:middle
Fíjate: ¡todavía tiene la declaración
de importación al archivo CSS!

00:02:48.246 --> 00:02:53.596 align:middle
Si lo piensas, cuando nuestro navegador
ejecuta esta línea, ¡debería fallar!

00:02:54.006 --> 00:02:59.636 align:middle
Debería descargar el archivo CSS, intentar interpretarlo
como JavaScript y encontrar un error de sintaxis.

00:03:00.146 --> 00:03:01.806 align:middle
Pero no lo hace.

00:03:02.116 --> 00:03:04.736 align:middle
La razón es un truco dentro de AssetMapper.

00:03:05.106 --> 00:03:09.846 align:middle
Cuando importas un archivo CSS, AssetMapper
añade una entrada importmap para él.

00:03:09.846 --> 00:03:12.646 align:middle
Así que, aunque empiece por ./,

00:03:12.646 --> 00:03:17.326 align:middle
nuestro navegador busca si hay una ruta
coincidente dentro del mapa de importación. Y la

00:03:17.806 --> 00:03:19.376 align:middle
hay. Por eso

00:03:19.906 --> 00:03:22.726 align:middle
, descarga este archivo.... que

00:03:22.856 --> 00:03:25.326 align:middle
no es un archivo real. Es un archivo

00:03:25.676 --> 00:03:28.196 align:middle
falso que no hace.... absolutamente

00:03:28.486 --> 00:03:30.546 align:middle
nada. Así que

00:03:30.976 --> 00:03:34.496 align:middle
hace que esa línea no dé error y... no

00:03:34.496 --> 00:03:35.986 align:middle
haga nada. Para

00:03:36.766 --> 00:03:42.396 align:middle
ver lo potente que es esto, vamos a crear un segundo
archivo CSS para apoyar nuestro saludo alienígena. Llámalo

00:03:43.586 --> 00:03:49.116 align:middle
alien-greeting.css y haz que el fondo
del cuerpo sea darkgreen. Aunque,

00:03:49.366 --> 00:03:53.166 align:middle
personalmente, espero que los extraterrestres
tengan los colores del arco iris:

00:03:54.276 --> 00:03:57.916 align:middle
En alien-greeting.js, importa
eso: ../styles/alien-greeting.css:

00:03:57.916 --> 00:04:02.616 align:middle
¿Funcionará? ¡Pruébalo!

00:04:03.266 --> 00:04:05.596 align:middle
Actualiza y... ¡fondo verde!

00:04:05.986 --> 00:04:07.256 align:middle
En el

00:04:07.916 --> 00:04:12.766 align:middle
código fuente, tenemos una segunda etiqueta link
y un segundo elemento nuevo en importmap. ¡Eso es

00:04:12.906 --> 00:04:14.726 align:middle
genial! Como app.js

00:04:14.986 --> 00:04:18.406 align:middle
importa alien-greeting.js, AssetMapper también

00:04:18.596 --> 00:04:22.856 align:middle
encuentra cualquier archivo
CSS que importe. Aquí es donde

00:04:23.536 --> 00:04:26.416 align:middle
las cosas se ponen realmente
espeluznantes. Los módulos JavaScript

00:04:26.916 --> 00:04:31.016 align:middle
tienen una sintaxis de importación
dinámica que te permite importar

00:04:31.016 --> 00:04:33.456 align:middle
módulos de forma asíncrona. Eso nos permite

00:04:34.096 --> 00:04:38.676 align:middle
cargar un archivo más tarde, cuando lo
necesitemos, en lugar de al cargar la página. Y

00:04:39.026 --> 00:04:41.416 align:middle
podemos utilizar este
truco con CSS. Copia esto.

00:04:42.016 --> 00:04:42.756 align:middle
Imagina que

00:04:43.626 --> 00:04:48.786 align:middle
sólo queremos cargar ese archivo CSS
cuando inPeace sea igual a false. Así que

00:04:48.926 --> 00:04:55.916 align:middle
diré, si no inPeace, entonces usa setTimeout()
para esperar 4 segundos. Después de 4 segundos

00:04:57.936 --> 00:05:00.556 align:middle
, importa el archivo CSS. Excepto que, en

00:05:01.076 --> 00:05:05.296 align:middle
cuanto necesites que una importación no
viva al principio de tu archivo, tendrás

00:05:05.586 --> 00:05:09.096 align:middle
que llamarla como una función:
Eso está muy bien. Pruébalo.

00:05:09.686 --> 00:05:12.896 align:middle
Al principio, ¡fondo azul! 2, 3,

00:05:13.596 --> 00:05:17.216 align:middle
4 , ¡fondo verde! El archivo CSS

00:05:17.726 --> 00:05:19.986 align:middle
se cargó perezosamente. ¿Cómo? Bueno,

00:05:20.386 --> 00:05:25.906 align:middle
ya no hay etiqueta de enlace alien-greeting.css
en el código fuente de la página. En su lugar,

00:05:26.506 --> 00:05:31.016 align:middle
esperamos a que el navegador ejecute
esta línea JavaScript. Cuando

00:05:31.626 --> 00:05:35.196 align:middle
lo hace, lo busca en el mapa
de importación, lo encuentra

00:05:35.316 --> 00:05:38.356 align:middle
y descarga este archivo falso. Pero esta

00:05:38.906 --> 00:05:45.426 align:middle
vez, en lugar de ser una línea que no hace nada,
este archivo falso añade una nueva etiqueta link a la

00:05:45.426 --> 00:05:52.346 align:middle
secciónhead con rel="stylesheet" y href
configuradas en alien-greeting.css. ¡Diablos,

00:05:52.906 --> 00:05:55.496 align:middle
podemos ver esto en tiempo real! Aquí,

00:05:56.286 --> 00:05:59.416 align:middle
bajo la etiqueta head,
vemos la hoja de estilos. Si

00:05:59.416 --> 00:06:05.046 align:middle
actualizo y abro rápidamente eso,
no está ahí. Y... entonces se

00:06:05.756 --> 00:06:07.806 align:middle
añade. Tan apestosamente

00:06:08.036 --> 00:06:09.586 align:middle
guay. Ahora que

00:06:09.586 --> 00:06:13.286 align:middle
ya sabemos cómo funciona CSS,
¡mañana lo utilizaremos para dar

00:06:13.556 --> 00:06:16.166 align:middle
vida a nuestro sitio web! Pero quiero hacerlo

00:06:16.666 --> 00:06:22.616 align:middle
desde un ángulo extra divertido:
Quiero utilizar Tailwind CSS.
